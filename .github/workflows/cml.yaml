name: CML
on: [push]
permissions: write-all
jobs:
  train-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: setup CML 
        uses: iterative/setup-cml@v1

      
      - name: setup DVC 
        uses: iterative/setup-dvc@v1

      - name: Set up gdrive
        run: |
          pip install gdrive
          pip install dvc-gdrive

        
      - name: setup python         
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' 
      

      - name: install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "requirement done"
      
      - name: pull DVC 
        env:
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
        run: |
          ls 
          mkdir -p ./data/processed
          mkdir -p ./data/row
          echo "--------------------"
          ls 
          echo "--------------------"
          cd ./data
          ls
          cd ..
          echo "--------------------"
          cd ./data/row
          ls
          cd ..
          echo "--------------------"

          dvc pull data --run-cache
          ls
          echo "pull done"


      - name: install lib
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |        
          echo "from outer to src"
          cd ./src
          pip install .
          cd ..
          echo "experiment script done"


      - name: run dvc pipeline
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          ls       
          dvc repro
          echo "experiment script done"


          

      # - name: run experiment1
      #   env:
      #     REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |        
      #     ls  
      #     python exp1.py
      #     echo "exp1 done"
      #     echo "#####################################"


      # - name: run experiment2
      #   env:
      #     REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |          
      #     ls
      #     python exp2.py
      #     echo "exp2 done"
      #     ls
      #     echo "#####################################"

      - name: Create report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create CML report
          echo "Start Create CML report"
          ls
          cd ./output
          ls 

          echo "## Metrics" > report.md  

          cat RandomForest_model_info.txt >> report.md

          echo "## Confusion Matrix" >> report.md

          echo '![](RandomForest_confusion_matrix.png "Confusion Matrix")' >> report.md

          echo "CML report done"
          cml comment create report.md
